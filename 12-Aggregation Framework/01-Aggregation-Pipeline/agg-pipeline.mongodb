// Aggregation Pipeline

// Need to add the persons data first
// mongoimport persons.json -d persons -c contacts --jsonArray --drop
// run in shell

// aggregate can take advantage of indexes
// also uses a cursor
// Simple aggregate with just match (same as find)
db.persons.aggregate([
    {$match: {gender: "female"}}
]);

// Group to merge documents, a way to find how many in a location.state
db.persons.aggregate([
    {$match: {gender: "female"}},
    {$group: {_id: {state: "$location.state"}, totalPersons: {$sum: 1}}}
]);

// Sorting
db.persons.aggregate([
    {$match: {gender: "female"}},
    {$group: {_id: {state: "$location.state"}, totalPersons: {$sum: 1}}},
    {$sort: {totalPersons: -1}}
]);


// $project (really the select on sql)
// jfc this shit...to get the first letter capitalized
db.persons.aggregate([
    {
      $project: {
        _id: 0,
        gender: 1,
        fullName: {
          $concat: [
            { $toUpper: { $substrCP: ['$name.first', 0, 1] } },
            {
              $substrCP: [
                '$name.first',
                1,
                { $subtract: [{ $strLenCP: '$name.first' }, 1] }
              ]
            },
            ' ',
            { $toUpper: { $substrCP: ['$name.last', 0, 1] } },
            {
              $substrCP: [
                '$name.last',
                1,
                { $subtract: [{ $strLenCP: '$name.last' }, 1] }
              ]
            }
          ]
        }
      }
    }
  ]);



